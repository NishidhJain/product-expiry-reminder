import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState, useContext } from "react";

import {
  createUserWithEmailAndPassword,
  onAuthStateChanged,
} from "firebase/auth";
import { auth, usersCollection } from "../firebaseConfig";
import { UserData } from "../context/Context";
import { addDoc } from "firebase/firestore";

import Form from "react-bootstrap/Form";
import Container from "react-bootstrap/Container";
import Button from "react-bootstrap/Button";
import FloatingLabel from "react-bootstrap/FloatingLabel";

const SignUp: NextPage = () => {
  const router = useRouter();

  const { setUserDetails, setItemToLocalStorage } = useContext(UserData);

  const [userInput, setUserInput] = useState({
    name: "",
    email: "",
    password: "",
    confirmPass: "",
  });

  const createDbUser = async (uid, displayName) => {
    const data = { uid, displayName, productList: [] };
    try {
      const res = await addDoc(usersCollection, data);
      console.log("createDbUser", res);
    } catch (err) {
      alert("Unable to createDbUser", err.message);
    }
  };

  const onInputChange = (e) => {
    setUserInput({ ...userInput, [e.target.name]: e.target.value });
  };

  const handleSignUp = async (e) => {
    e.preventDefault();
    // console.log(userInput);
    // return;

    if (userInput.confirmPass !== userInput.password) {
      return alert("Password does not match");
    }

    try {
      const user = await createUserWithEmailAndPassword(
        auth,
        userInput.email,
        userInput.password
      );

      // onAuthStateChanged(auth, (user) => {
      //   console.log("Auth state changed SignUp");

      //   if (user) {
      //     const { email, uid, displayName } = user;

      //     const personDetail = { uid, displayname: userInput.name, email };
      //     createDbUser(uid, userInput.name);
      //     console.log("person details", personDetail);
      //     setUserDetails(personDetail);
      //     router.push("/");
      //   } else {
      //     router.push("/signin");
      //   }
      // });
    } catch (err) {
      alert(`Error occured while creating user : ${err.message}`);
    }
  };

  return (
    <div>
      <Head>
        <title>Product Expiry List | Sign Up</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container className="p-2">
        <Form onSubmit={handleSignUp}>
          <FloatingLabel
            controlId="floatingInputName"
            label="Name"
            className="mb-3"
          >
            <Form.Control
              type="text"
              placeholder="Jon Doe"
              value={userInput.name}
              onChange={onInputChange}
              required={true}
              name="name"
            />
          </FloatingLabel>
          <FloatingLabel
            controlId="floatingInputEmail"
            label="Email address"
            className="mb-3"
          >
            <Form.Control
              type="email"
              placeholder="name@example.com"
              value={userInput.email}
              onChange={onInputChange}
              required={true}
              name="email"
            />
          </FloatingLabel>
          <FloatingLabel
            controlId="floatingPassword"
            label="Password"
            className="mb-3"
          >
            <Form.Control
              type="password"
              placeholder="Password"
              value={userInput.password}
              onChange={onInputChange}
              required={true}
              name="password"
            />
          </FloatingLabel>
          <FloatingLabel
            controlId="floatingConfirmPassword"
            label="Confirm Password"
            className="mb-3"
          >
            <Form.Control
              type="password"
              placeholder="Confirm password"
              value={userInput.confirmPass}
              onChange={onInputChange}
              required={true}
              name="confirmPass"
            />
          </FloatingLabel>
          <Button variant="primary" type="submit">
            Sign UP
          </Button>
        </Form>
        <p className="text-secondary">
          Already have an account? <Link href="/signin">Sign In</Link>
        </p>
      </Container>
    </div>
  );
};

export default SignUp;
